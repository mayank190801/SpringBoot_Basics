SPRINGBOOT CHEATSHEET
-> setup pom.xml file 

-> Create controller
@RestController
public class FunRestController { 
    @GetMapping("/")
    public String sayHello(){
        return "Hello world!";
    }
}

-> application.properties for making some server port change or making your own vairable
server.port = 8585
coach.name = Mayank Singh
and so on...

-> we have devtools for automatically starting our app everytime we save 
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-devtools</artifactId>
</dependency>


-> We have actuator to exposes endpoints for the metrics out of the box
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-actuator</artifactId>
</dependency>
/actuator/health - checks the status of your application
/actuator/info - returns a object, from application.properties file
/actuator/auditevents
/actuator/beans
/actuator/mappings - List of all @ReqeustMappings paths
/actuator/threaddump
--- (application.properties inside stuff) ---
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.include=health,info
management.info.env.enabled=true
info.app.name=Mayank Singh
info.app.description=How are you?


-> We have actuator security - you can secure the endpoints using this
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-security</artifactId>
</dependency>
/health and /info are always exposed, you can hide them if you want in application.properties
for other you have to put username=user and password=would be present in the console window


-> Run from the command line
